

================================================================
== Vivado HLS Report for 'ula_new_opUla'
================================================================
* Date:           Fri Dec  8 21:51:48 2017

* Version:        2017.3 (Build 2018833 on Wed Oct 04 20:30:40 MDT 2017)
* Project:        ula_simples_final
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      2.23|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

 <State 1> : 2.23ns
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %A), !map !78"
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %B), !map !82"
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %carryIn), !map !86"
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %op), !map !90"
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %C), !map !94"
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %carryOut), !map !98"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPort([8 x i8]* @p_str, i32 0, [7 x i8]* @p_str1, [2 x i8]* @p_str2, i32 0, i32 0, i1* %A) nounwind" [ula.cpp:4]
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPort([8 x i8]* @p_str, i32 0, [7 x i8]* @p_str1, [2 x i8]* @p_str3, i32 0, i32 0, i1* %B) nounwind" [ula.cpp:5]
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPort([8 x i8]* @p_str, i32 0, [7 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i1* %carryIn) nounwind" [ula.cpp:6]
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPort([8 x i8]* @p_str, i32 0, [13 x i8]* @p_str5, [3 x i8]* @p_str6, i32 0, i32 0, i2* %op) nounwind" [ula.cpp:7]
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPort([8 x i8]* @p_str, i32 1, [7 x i8]* @p_str1, [2 x i8]* @p_str7, i32 0, i32 0, i1* %C) nounwind" [ula.cpp:8]
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPort([8 x i8]* @p_str, i32 1, [7 x i8]* @p_str1, [9 x i8]* @p_str8, i32 0, i32 0, i1* %carryOut) nounwind" [ula.cpp:9]
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProcessDef([8 x i8]* @p_str, i32 0, [6 x i8]* @p_str9) nounwind" [ula.cpp:10]
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str10)" [ula.cpp:10]
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 1) nounwind" [ula.cpp:10]
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%val_V = call i2 @_ssdm_op_Read.ap_auto.volatile.i2P(i2* %op)" [ula.cpp:7]
ST_1 : Operation 18 [1/1] (1.65ns)   --->   "switch i2 %val_V, label %._crit_edge [
    i2 1, label %1
    i2 -2, label %3
    i2 -1, label %5
  ]" [ula.cpp:7]
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_5 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %A)" [ula.cpp:19]
ST_1 : Operation 20 [1/1] (1.65ns)   --->   "br i1 %tmp_5, label %._crit_edge, label %6" [ula.cpp:19]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_8 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %B)" [ula.cpp:19]
ST_1 : Operation 22 [1/1] (1.65ns)   --->   "br label %._crit_edge" [ula.cpp:19]
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_4 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %A)" [ula.cpp:15]
ST_1 : Operation 24 [1/1] (1.65ns)   --->   "br i1 %tmp_4, label %4, label %._crit_edge" [ula.cpp:15]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_7 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %B)" [ula.cpp:15]
ST_1 : Operation 26 [1/1] (1.65ns)   --->   "br label %._crit_edge"
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %A)" [ula.cpp:10]
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_2 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %B)" [ula.cpp:10]
ST_1 : Operation 29 [1/1] (0.57ns)   --->   "%aux = xor i1 %tmp_1, %tmp_2" [ula.cpp:10]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_3 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %A)" [ula.cpp:11]
ST_1 : Operation 31 [1/1] (1.65ns)   --->   "br i1 %tmp_3, label %2, label %._crit_edge" [ula.cpp:11]
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %B)" [ula.cpp:11]
ST_1 : Operation 33 [1/1] (1.65ns)   --->   "br label %._crit_edge"
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%v = phi i1 [ %aux, %2 ], [ %tmp_7, %4 ], [ %tmp_8, %6 ], [ false, %0 ], [ %aux, %1 ], [ false, %3 ], [ true, %5 ]"
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%v_1 = phi i1 [ %tmp_6, %2 ], [ false, %4 ], [ false, %6 ], [ false, %0 ], [ false, %1 ], [ false, %3 ], [ false, %5 ]"
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.volatile.i1P(i1* %C, i1 %v)" [ula.cpp:28]
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.volatile.i1P(i1* %carryOut, i1 %v_1)" [ula.cpp:29]
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str10, i32 %tmp)" [ula.cpp:29]
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "ret void" [ula.cpp:29]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.23ns
The critical path consists of the following:
	wire read on port 'A' (ula.cpp:10) [37]  (0 ns)
	'xor' operation ('aux', ula.cpp:10) [39]  (0.57 ns)
	multiplexor before 'phi' operation ('aux') with incoming values : ('tmp', ula.cpp:19) ('tmp', ula.cpp:15) ('aux', ula.cpp:10) [46]  (1.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
