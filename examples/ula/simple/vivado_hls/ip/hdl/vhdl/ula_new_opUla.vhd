-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ula_new_opUla is
port (
    A : IN STD_LOGIC_VECTOR (15 downto 0);
    B : IN STD_LOGIC_VECTOR (15 downto 0);
    op : IN STD_LOGIC_VECTOR (1 downto 0);
    C : OUT STD_LOGIC_VECTOR (15 downto 0);
    C_ap_vld : OUT STD_LOGIC );
end;


architecture behav of ula_new_opUla is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal aux_V_2_fu_110_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_v_V_phi_fu_84_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_V_read_fu_56_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal aux_V_1_fu_96_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal aux_V_fu_103_p2 : STD_LOGIC_VECTOR (15 downto 0);

    component ula_new_mul_mul_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    ula_new_mul_mul_1bkb_U1 : component ula_new_mul_mul_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => B,
        din1 => A,
        dout => aux_V_2_fu_110_p2);




    C <= ap_phi_mux_v_V_phi_fu_84_p8;
    C_ap_vld <= ap_const_logic_1;

    ap_phi_mux_v_V_phi_fu_84_p8_assign_proc : process(aux_V_2_fu_110_p2, val_V_read_fu_56_p2, aux_V_1_fu_96_p2, aux_V_fu_103_p2)
    begin
        if ((val_V_read_fu_56_p2 = ap_const_lv2_0)) then 
            ap_phi_mux_v_V_phi_fu_84_p8 <= ap_const_lv16_0;
        elsif ((val_V_read_fu_56_p2 = ap_const_lv2_1)) then 
            ap_phi_mux_v_V_phi_fu_84_p8 <= aux_V_fu_103_p2;
        elsif ((val_V_read_fu_56_p2 = ap_const_lv2_2)) then 
            ap_phi_mux_v_V_phi_fu_84_p8 <= aux_V_1_fu_96_p2;
        elsif ((val_V_read_fu_56_p2 = ap_const_lv2_3)) then 
            ap_phi_mux_v_V_phi_fu_84_p8 <= aux_V_2_fu_110_p2;
        else 
            ap_phi_mux_v_V_phi_fu_84_p8 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    aux_V_1_fu_96_p2 <= std_logic_vector(unsigned(A) - unsigned(B));
    aux_V_fu_103_p2 <= std_logic_vector(unsigned(B) + unsigned(A));
    val_V_read_fu_56_p2 <= op;
end behav;
