// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="translator,hls_ip_2017_3,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.350000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=353,HLS_SYN_LUT=499}" *)

module translator (
        number,
        whichDisp,
        toDisp,
        ap_clk,
        ap_rst
);


input  [9:0] number;
input  [3:0] whichDisp;
output  [6:0] toDisp;
input   ap_clk;
input   ap_rst;

reg[6:0] toDisp;

wire   [0:0] translator_ssdm_t_load_fu_66_p1;
wire   [1:0] ap_CS_fsm;
wire   [6:0] grp_translator_transform_fu_48_toDisp;
wire    grp_translator_transform_fu_48_toDisp_ap_vld;
wire   [31:0] grp_translator_transform_fu_48_translator_disp;
wire    grp_translator_transform_fu_48_translator_disp_ap_vld;
wire   [1:0] grp_translator_transform_fu_48_translator_digits_address0;
wire    grp_translator_transform_fu_48_translator_digits_ce0;
wire    grp_translator_transform_fu_48_translator_digits_we0;
wire   [31:0] grp_translator_transform_fu_48_translator_digits_d0;
wire   [1:0] grp_translator_transform_fu_48_translator_digits_address1;
wire    grp_translator_transform_fu_48_translator_digits_ce1;
wire    grp_translator_transform_fu_48_translator_digits_we1;
wire   [31:0] grp_translator_transform_fu_48_translator_digits_d1;
wire   [31:0] grp_translator_transform_fu_48_translator_transformed_o;
wire    grp_translator_transform_fu_48_translator_transformed_o_ap_vld;
wire    ap_CS_fsm_state2;
reg   [31:0] translator_transformed;

translator_transleOg #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
translator_digits_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_translator_transform_fu_48_translator_digits_address0),
    .ce0(grp_translator_transform_fu_48_translator_digits_ce0),
    .we0(grp_translator_transform_fu_48_translator_digits_we0),
    .d0(grp_translator_transform_fu_48_translator_digits_d0),
    .address1(grp_translator_transform_fu_48_translator_digits_address1),
    .ce1(grp_translator_transform_fu_48_translator_digits_ce1),
    .we1(grp_translator_transform_fu_48_translator_digits_we1),
    .d1(grp_translator_transform_fu_48_translator_digits_d1)
);

translator_transform grp_translator_transform_fu_48(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .number(number),
    .whichDisp(whichDisp),
    .toDisp(grp_translator_transform_fu_48_toDisp),
    .toDisp_ap_vld(grp_translator_transform_fu_48_toDisp_ap_vld),
    .translator_disp(grp_translator_transform_fu_48_translator_disp),
    .translator_disp_ap_vld(grp_translator_transform_fu_48_translator_disp_ap_vld),
    .translator_digits_address0(grp_translator_transform_fu_48_translator_digits_address0),
    .translator_digits_ce0(grp_translator_transform_fu_48_translator_digits_ce0),
    .translator_digits_we0(grp_translator_transform_fu_48_translator_digits_we0),
    .translator_digits_d0(grp_translator_transform_fu_48_translator_digits_d0),
    .translator_digits_address1(grp_translator_transform_fu_48_translator_digits_address1),
    .translator_digits_ce1(grp_translator_transform_fu_48_translator_digits_ce1),
    .translator_digits_we1(grp_translator_transform_fu_48_translator_digits_we1),
    .translator_digits_d1(grp_translator_transform_fu_48_translator_digits_d1),
    .translator_transformed_i(translator_transformed),
    .translator_transformed_o(grp_translator_transform_fu_48_translator_transformed_o),
    .translator_transformed_o_ap_vld(grp_translator_transform_fu_48_translator_transformed_o_ap_vld)
);

always @ (posedge ap_clk) begin
    if ((1'b1 == grp_translator_transform_fu_48_toDisp_ap_vld)) begin
        toDisp <= grp_translator_transform_fu_48_toDisp;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == grp_translator_transform_fu_48_translator_transformed_o_ap_vld)) begin
        translator_transformed <= grp_translator_transform_fu_48_translator_transformed_o;
    end
end

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign translator_ssdm_t_load_fu_66_p1 = 1'd0;

endmodule //translator
